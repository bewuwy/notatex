<script>
    // various utility functions

    function createParagraph(text, tooltip="") {
        let p = document.createElement("p");
        p.innerText = text;
        p.title = tooltip;

        return p
    }

    function getLastPage() {
        let back;
        if (document.referrer.indexOf(location.protocol + "//" + location.host) === 0) {
            back = document.referrer || "/";
        }
        else {
            back = "/";
        }

        return back;
    }

    function setCookie(name,value,days) {
        let expires = "";
        if (days) {
            const date = new Date();
            date.setTime(date.getTime() + (days*24*60*60*1000));
            expires = "; expires=" + date.toUTCString();
        }
        document.cookie = name + "=" + (value || "")  + expires + "; path=/";
    }
    function getCookie(name) {
        const nameEQ = name + "=";
        const ca = document.cookie.split(';');
        for(let i=0; i < ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0)===' ') c = c.substring(1,c.length);
            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);
        }
        return null;
    }
    function eraseCookie(name) {
        document.cookie = name +'=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';
    }


    function isValidURL(string) {
        const res = string.match(
            /(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g);
        return (res !== null)
    }

    // note search
    function addSearchById(inputId, itemsContainerId, itemsPrefix="") {
        $(`#${inputId}`).on("input", function() {
            const val = $(this).val().toLowerCase();
            const notes = $(`#${itemsContainerId}`).children();

            for (let i = 0; i < notes.length; i++) {
                const n = notes[i].id.toLowerCase().slice(itemsPrefix.length);
                if (n.indexOf(val) === -1) {
                    $(`[id=\"${notes[i].id}\"]`).addClass("hidden");
                }
                else {
                    $(`[id=\"${notes[i].id}\"]`).removeClass("hidden");
                }
            }
        });
    }

    // element classes function
    function setBgColor(el, className) {
        const classes = el.className.split(" ").filter(c => !c.startsWith("bg-"));
        el.className = classes.join(" ").trim();

        el.classList.add(className);
    }

    // util class
    class TwoWayMap {
        constructor(map) {
            this.map = map;
            this.reverseMap = {};
            for(const key in map) {
                const value = map[key];
                this.reverseMap[value] = key;
            }
        }
        get(key) { return this.map[key]; }
        revGet(key) { return this.reverseMap[key]; }
    }
</script>

<!DOCTYPE html>
<html lang="en">
    <head>
        <%- include('partials/head'); %>

        <script>
            // TODO: settings saved in account and not in cookies

            function initiateSettings() {
                firebase.auth().onAuthStateChanged(function(user) {
                    if (user) {
                        const applySettingsButton = document.getElementById("savePreferences");

                        applySettingsButton.onclick = function () {
                            // theme setting
                            let themeValue = document.querySelector('input[name="theme"]:checked').value;
                            setCookie("theme", themeValue, 9999);

                            // toc setting
                            let tocValue = $("#toggleTOC").prop("checked");
                            setCookie("toc", tocValue.toString(), 9999);

                            // save settings and go back to last page
                            window.location = getLastPage();
                        };

                        // load saved settings on load
                        
                        // load theme settings
                        let savedTheme = getCookie("theme") || "default";
                        const selectedTheme = document.querySelector(`input[value=${savedTheme}]`);
                        selectedTheme.checked = true;

                        // load toc settings
                        let savedToc = getCookie("toc");

                        if (savedToc === null) { savedToc = true; }  // default to true if no cookie
                        else { savedToc = (getCookie("toc") === "true"); }
                        
                        $("#toggleTOC").prop("checked", savedToc);
                    }
                    else {
                        // User is signed out.
                        window.location='/login';
                    }
                }, function(error) {
                    console.log(error);
                });
            }

            window.addEventListener('load', initiateSettings);
        </script>
    </head>
    <body>
        <div id="content">

            <div class="mb-12">
                <%- include('partials/topBar'); %>
            </div>

            <div class="flex flex-wrap justify-center">
                <div class="infoElement">

                    <h2 class="text-2xl">
                        <svg xmlns="http://www.w3.org/2000/svg" class="inline-block align-text-bottom h-7 w-7" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                            <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                        </svg>
                        Settings
                    </h2>
                    <div id="preferencesForm">
                        <h4>Theme</h4>
                        <div id="themeSettings" class="flex flex-wrap mb-4">
                            <% for (const [key, value] of Object.entries(themes)) { %>
                                <div class="my-2">
                                    <input type="radio" name="theme" value="<%- key -%>" id="<%- key -%>" class="peer">
                                    <label for="<%- key -%>" class="peer-checked:brightness-75 radio-label"><%- value["name"] -%></label>
                                </div>
                            <% } %>
                        </div>

                        <% if (themes[theme]["source"]) { %>
                            <div id="theme-source">Theme inspired from <a class="underline" target="_blank" href="https://github.com/<%- themes[theme]['source'] -%>"><%- themes[theme]["source"] -%></a> github project</div>
                        <% } %>

                        <h4>Table of contents</h4>
                        <div id="tocSettings" class="flex flex-wrap mb-4">
                            <label for="toggleTOC" class="flex items-center cursor-pointer" title="Option disabled">
                                <div class="mr-3">Toggle TOC</div>
                                
                                <div class="relative">
                                  <input type="checkbox" id="toggleTOC" class="sr-only peer" disabled checked>
                                  <div class="block bg-gray-600 w-14 h-8 rounded-full"></div>
                                  <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition peer-disabled:brightness-75"></div>
                                </div>
                            </label>

                        </div>
                    </div>
                </div>

                <button id="savePreferences">
                    <svg xmlns="http://www.w3.org/2000/svg" class="inline-block align-text-bottom h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    Apply settings
                </button>
            </div>
        </div>
    </body>
</html>
